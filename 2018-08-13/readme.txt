1.立即执行函数 iife
（function(){
   
  }）
2.闭包(有权访问另一个函数作用域内变量的函数都是闭包)（内部函数可以访问外部函数的变量）
函数带()才是执行函数
闭包就是一个函数引用另外一个函数的变量，因为变量被引用着所以不会被回收，因此可以用来封装一个私有变量。这是优点也是缺点，不必要的闭包只会徒增内存消耗！另外使用闭包也要注意变量的值是否符合你的要求，因为他就像一个静态私有变量一样。
闭包使用完以后，置null，防止内存泄漏


3.this（谁调用了this，this就指向谁）

4.原型链
构造函数和初始化类是一样的东西
所有函数对象的原型对象都继承制原始对象,即fn.prototype.__proto__为原始对象（原始对象在继承属性__proto__中有定义）
对象，数组，原型链按引用传递，修改后，引用会发生相应改变

a.构造函数里的属性的优先级比原型链的要高
b.面向对象的编程时候，js没有类的概念，可以用函数代替
c.constructor 实际就是对应的那个函数
d. prototype 按引用传递的  Object.create原型链的副本

5.函数/变量提升
函数提升的级别比变量高

